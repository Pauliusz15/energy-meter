{"version":3,"sources":["actions/add-result-row.js","ui/Stopwatch.js","ui/LapTable.js","actions/change-parameter.js","ui/Parameters.js","ui/App.js","serviceWorker.js","reducers/index.js","reducers/result-rows.js","reducers/coeff.js","reducers/imp.js","reducers/imp-kwh.js","index.js"],"names":["addResultRow","data","type","payload","Stopwatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startTime","time","startDisabled","lapDisabled","lapNum","previousTime","onStart","bind","assertThisInitialized","onReset","onImp","clearInterval","timerID","_this2","setState","Date","setInterval","tick","window","navigator","vibrate","newTime","period","row","nr","kw","getKw","coeff","imp","impKwh","rows","resultRows","slice","unshift","react_default","a","createElement","className","Stopwatch_TimeText","Stopwatch_Buttons","Component","toFixed","TimeText","millis","parseInt","secs","mins","Buttons","Button","Group","size","fluid","onClick","content","focus","connect","dispatch","bindActionCreators","LapTable","map","item","key","length","LapTable_TableRow","fontWeight","createRows","Table","unstackable","fixed","celled","striped","Header","Row","textAlign","style","fontSize","HeaderCell","width","Body","TableRow","periodString","Cell","changeParameter","Parameters","changeVal","e","target","id","param","value","Parameters_Parameter","onChange","text","Parameter","Label","pointing","Input","placeholder","App","ui_Parameters","ui_Stopwatch","ui_LapTable","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","allReducers","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","render","es","ui_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.36e9985b.chunk.js","sourcesContent":["export const addResultRow = data => {\r\n  return {\r\n    type: \"ADD_RESULT_ROW\",\r\n    payload: data\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nimport { addResultRow } from '../actions/add-result-row';\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Time when interval when stopwatch has started\r\n      startTime: 0,\r\n      time: 0,\r\n      // if buttons are disabled\r\n      startDisabled: false,\r\n      lapDisabled: true,\r\n      lapNum: 0,\r\n      previousTime: null\r\n    };\r\n\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onReset = this.onReset.bind(this);\r\n    this.onImp = this.onImp.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  onStart() {\r\n    this.setState({\r\n      startTime: new Date(),\r\n      startDisabled: true,\r\n      lapDisabled: false\r\n    });\r\n    this.timerID = setInterval(() => this.tick(), 100);\r\n    window.navigator.vibrate(50);\r\n  }\r\n\r\n  onReset() {\r\n    this.setState({\r\n      time: 0,\r\n      startDisabled: false,\r\n      lapDisabled: true,\r\n      previousTime: null,\r\n      lapNum: 0\r\n    });\r\n    this.props.addResultRow([]);\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  onImp() {\r\n    this.setState({ lapNum: this.state.lapNum + 1 });\r\n\r\n    const newTime = new Date();\r\n\r\n    let prevTime;\r\n    this.state.previousTime\r\n      ? (prevTime = this.state.previousTime)\r\n      : (prevTime = this.state.startTime);\r\n\r\n    const period = newTime - prevTime;\r\n    const row = {\r\n      nr: this.state.lapNum,\r\n      period: period,\r\n      kw: getKw(this.props.coeff, this.props.imp, this.props.impKwh, period)\r\n    };\r\n    //console.log(this.props.parameters.coeff);\r\n    let rows = this.props.resultRows.slice();\r\n    rows.unshift(row);\r\n\r\n    this.props.addResultRow(rows);\r\n    this.setState({ previousTime: newTime });\r\n    window.navigator.vibrate(50);\r\n  }\r\n\r\n  // Updates time by subtracting starting time of interval from current time\r\n  tick() {\r\n    this.setState({\r\n      time: new Date() - this.state.startTime\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"align-center\">\r\n        <TimeText time={this.state.time} />\r\n        <Buttons\r\n          onStart={this.onStart}\r\n          onImp={this.onImp}\r\n          onReset={this.onReset}\r\n          startDisabled={this.state.startDisabled}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getKw = (coeff, imp, impKwh, period) => {\r\n  return ((coeff * imp * 3600) / ((impKwh * period) / 1000)).toFixed(3);\r\n};\r\n\r\nconst TimeText = props => {\r\n  const millis = parseInt((props.time % 1000) / 100);\r\n  const secs = parseInt(props.time / 1000) % 60;\r\n  const mins = parseInt(props.time / 60000);\r\n\r\n  return (\r\n    <div className=\"time-text-container align-center\">\r\n      <p>\r\n        {mins} : {('0' + secs).slice(-2)} : {millis}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Buttons = props => {\r\n  if (!props.startDisabled) {\r\n    return (\r\n      <div className=\"btn-container\">\r\n        <Button.Group size={'big'} fluid>\r\n          <Button\r\n            focus={false}\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onReset}\r\n            content=\"Reset\"\r\n          />\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onStart}\r\n            content=\"Start\"\r\n          />\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"btn-container\">\r\n        <Button.Group size={'big'} fluid>\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onReset}\r\n            content=\"Reset\"\r\n          />\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onImp}\r\n            content=\"Imp\"\r\n          />\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    resultRows: state.resultRows,\r\n    coeff: state.coeff,\r\n    imp: state.imp,\r\n    impKwh: state.impKwh\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      addResultRow: addResultRow\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(Stopwatch);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nclass LapTable extends Component {\r\n  createRows() {\r\n    return this.props.resultRows.map(item => {\r\n      return (item.key =\r\n        this.props.resultRows.length - 1 === item.nr ? (\r\n          <TableRow\r\n            fontWeight=\"bold\"\r\n            key={item.nr}\r\n            nr={item.nr + 1}\r\n            period={item.period}\r\n            kw={item.kw}\r\n          />\r\n        ) : (\r\n          <TableRow\r\n            key={item.nr}\r\n            nr={item.nr + 1}\r\n            period={item.period}\r\n            kw={item.kw}\r\n          />\r\n        ));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const rows = this.createRows();\r\n    return (\r\n      <div className=\"lap-table\">\r\n        <Table unstackable fixed size=\"small\" celled striped>\r\n          <Table.Header>\r\n            <Table.Row textAlign=\"center\" style={{ fontSize: 18 }}>\r\n              <Table.HeaderCell width={3}>№</Table.HeaderCell>\r\n              <Table.HeaderCell>Time</Table.HeaderCell>\r\n              <Table.HeaderCell>kW</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{rows}</Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TableRow = props => {\r\n  const mins = parseInt(props.period / 60000);\r\n  const secs = parseInt(props.period / 1000) % 60;\r\n  const millis = parseInt((props.period % 1000) / 100);\r\n  const periodString = mins + ':' + ('0' + secs).slice(-2) + ':' + millis;\r\n  return (\r\n    <Table.Row\r\n      textAlign=\"center\"\r\n      style={{ fontWeight: props.fontWeight, fontSize: 18 }}\r\n    >\r\n      <Table.Cell width={3}>{props.nr}</Table.Cell>\r\n      <Table.Cell>{periodString}</Table.Cell>\r\n      <Table.Cell>{props.kw}</Table.Cell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    resultRows: state.resultRows\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(LapTable);\r\n","export const changeParameter = (type, data) => {\r\n  switch (type) {\r\n    case \"coeffInput\":\r\n      return {\r\n        type: \"CHANGE_COEFF\",\r\n        payload: data\r\n      };\r\n    case \"impInput\":\r\n      return {\r\n        type: \"CHANGE_IMP\",\r\n        payload: data\r\n      };\r\n    case \"impKwhInput\":\r\n      return {\r\n        type: \"CHANGE_IMP_KWH\",\r\n        payload: data\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Input, Label } from 'semantic-ui-react';\r\nimport { changeParameter } from '../actions/change-parameter';\r\n\r\nclass Parameters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.state = { coeffVal: 1, impVal: 1, impKwhVal: 1000 };\r\n\r\n    this.changeVal = this.changeVal.bind(this);\r\n  }\r\n\r\n  changeVal(e) {\r\n    /*switch (e.target.id) {\r\n      case \"coeffInput\":\r\n        this.setState({ coeffVal: e.target.value });\r\n        break;\r\n      case \"impInput\":\r\n        this.setState({ impVal: e.target.value });\r\n        break;\r\n      case \"impKwhInput\":\r\n        this.setState({ impKwhVal: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }*/\r\n    const type = e.target.id;\r\n    const param = e.target.value;\r\n    this.props.changeParameter(type, param);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"align-center\">\r\n        <div className=\"parameters\">\r\n          <Parameter\r\n            id=\"coeffInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.coeff}\r\n            text=\"Coefficient\"\r\n          />\r\n          <Parameter\r\n            id=\"impInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.imp}\r\n            text=\"Impulse\"\r\n          />\r\n          <Parameter\r\n            id=\"impKwhInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.impKwh}\r\n            text=\"Imp/kWh\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Parameter = props => {\r\n  return (\r\n    <div className=\"parameter\">\r\n      <div>\r\n        <Label pointing=\"below\">{props.text}</Label>\r\n      </div>\r\n      <div>\r\n        <Input\r\n          fluid\r\n          id={props.id}\r\n          size=\"small\"\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          placeholder={'Number'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    coeff: state.coeff,\r\n    imp: state.imp,\r\n    impKwh: state.impKwh\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      changeParameter: changeParameter\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(Parameters);\r\n","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nimport Stopwatch from \"./Stopwatch\";\nimport LapTable from \"./LapTable\";\nimport Parameters from \"./Parameters\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Parameters />\n        <Stopwatch />\n        <LapTable />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nimport resultRows from \"./result-rows\";\r\nimport coeff from \"./coeff\";\r\nimport imp from \"./imp\";\r\nimport impKwh from \"./imp-kwh\";\r\n\r\nconst allReducers = combineReducers({\r\n  resultRows: resultRows,\r\n  coeff: coeff,\r\n  imp: imp,\r\n  impKwh: impKwh\r\n});\r\n\r\nexport default allReducers;\r\n","export default function(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_RESULT_ROW\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_COEFF\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_IMP\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1000, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_IMP_KWH\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./ui/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers/\";\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}