{"version":3,"sources":["actions/add-result-row.js","ui/Stopwatch.js","ui/LapTable.js","actions/change-parameter.js","ui/Parameters.js","ui/App.js","serviceWorker.js","reducers/index.js","reducers/result-rows.js","reducers/coeff.js","reducers/imp.js","reducers/imp-kwh.js","index.js"],"names":["addResultRow","data","type","payload","Stopwatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startTime","time","startDisabled","lapDisabled","lapNum","previousTime","onStart","bind","assertThisInitialized","onReset","onImp","clearInterval","timerID","_this2","setState","Date","setInterval","tick","window","navigator","vibrate","newTime","period","row","nr","kw","getKw","coeff","imp","impKwh","rows","resultRows","slice","unshift","react_default","a","createElement","className","Stopwatch_TimeText","Stopwatch_Buttons","Component","toFixed","TimeText","millis","parseInt","secs","mins","Buttons","Button","Group","size","fluid","onClick","content","connect","dispatch","bindActionCreators","LapTable","map","item","key","length","LapTable_TableRow","fontWeight","createRows","Table","unstackable","fixed","celled","striped","Header","Row","textAlign","style","fontSize","HeaderCell","width","Body","TableRow","periodString","Cell","changeParameter","Parameters","changeVal","e","target","id","param","value","Parameters_Parameter","onChange","text","Parameter","Label","pointing","Input","onFocus","handleFocus","onKeyPress","checkIfNumbers","placeholder","event","select","clipboardData","getData","keyCode","which","String","fromCharCode","test","returnValue","preventDefault","App","fetch","err","console","log","ui_Parameters","ui_Stopwatch","ui_LapTable","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","allReducers","combineReducers","arguments","undefined","action","store","createStore","ReactDOM","render","es","ui_App","document","getElementById","URL","process","href","origin","addEventListener","concat","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e9abd237.chunk.js","sourcesContent":["export const addResultRow = data => {\r\n  return {\r\n    type: \"ADD_RESULT_ROW\",\r\n    payload: data\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport { addResultRow } from \"../actions/add-result-row\";\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // Time when interval when stopwatch has started\r\n      startTime: 0,\r\n      time: 0,\r\n      // if buttons are disabled\r\n      startDisabled: false,\r\n      lapDisabled: true,\r\n      lapNum: 0,\r\n      previousTime: null\r\n    };\r\n\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onReset = this.onReset.bind(this);\r\n    this.onImp = this.onImp.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  onStart() {\r\n    this.setState({\r\n      startTime: new Date(),\r\n      startDisabled: true,\r\n      lapDisabled: false\r\n    });\r\n    this.timerID = setInterval(() => this.tick(), 100);\r\n    window.navigator.vibrate(50);\r\n  }\r\n\r\n  onReset() {\r\n    this.setState({\r\n      time: 0,\r\n      startDisabled: false,\r\n      lapDisabled: true,\r\n      previousTime: null,\r\n      lapNum: 0\r\n    });\r\n    this.props.addResultRow([]);\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  onImp() {\r\n    this.setState({ lapNum: this.state.lapNum + 1 });\r\n\r\n    const newTime = new Date();\r\n\r\n    let prevTime;\r\n    this.state.previousTime\r\n      ? (prevTime = this.state.previousTime)\r\n      : (prevTime = this.state.startTime);\r\n\r\n    const period = newTime - prevTime;\r\n    const row = {\r\n      nr: this.state.lapNum,\r\n      period: period,\r\n      kw: getKw(this.props.coeff, this.props.imp, this.props.impKwh, period)\r\n    };\r\n    //console.log(this.props.parameters.coeff);\r\n    let rows = this.props.resultRows.slice();\r\n    rows.unshift(row);\r\n\r\n    this.props.addResultRow(rows);\r\n    this.setState({ previousTime: newTime });\r\n    window.navigator.vibrate(50);\r\n  }\r\n\r\n  // Updates time by subtracting starting time of interval from current time\r\n  tick() {\r\n    this.setState({\r\n      time: new Date() - this.state.startTime\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"align-center\">\r\n        <TimeText time={this.state.time} />\r\n        <Buttons\r\n          onStart={this.onStart}\r\n          onImp={this.onImp}\r\n          onReset={this.onReset}\r\n          startDisabled={this.state.startDisabled}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getKw = (coeff, imp, impKwh, period) => {\r\n  return ((coeff * imp * 3600) / ((impKwh * period) / 1000)).toFixed(3);\r\n};\r\n\r\nconst TimeText = props => {\r\n  const millis = parseInt((props.time % 1000) / 100);\r\n  const secs = parseInt(props.time / 1000) % 60;\r\n  const mins = parseInt(props.time / 60000);\r\n\r\n  return (\r\n    <div className=\"time-text-container align-center\">\r\n      <p>\r\n        {mins} : {(\"0\" + secs).slice(-2)} : {millis}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Buttons = props => {\r\n  if (!props.startDisabled) {\r\n    return (\r\n      <div className=\"btn-container\">\r\n        <Button.Group size={\"big\"} fluid>\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onReset}\r\n            content=\"Reset\"\r\n          />\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onStart}\r\n            content=\"Start\"\r\n          />\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"btn-container\">\r\n        <Button.Group size={\"big\"} fluid>\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onReset}\r\n            content=\"Reset\"\r\n          />\r\n          <Button\r\n            className=\"stopwatch-button\"\r\n            onClick={props.onImp}\r\n            content=\"Imp\"\r\n          />\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    resultRows: state.resultRows,\r\n    coeff: state.coeff,\r\n    imp: state.imp,\r\n    impKwh: state.impKwh\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      addResultRow: addResultRow\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(Stopwatch);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nclass LapTable extends Component {\r\n  createRows() {\r\n    return this.props.resultRows.map(item => {\r\n      return (item.key =\r\n        this.props.resultRows.length - 1 === item.nr ? (\r\n          <TableRow\r\n            fontWeight=\"bold\"\r\n            key={item.nr}\r\n            nr={item.nr + 1}\r\n            period={item.period}\r\n            kw={item.kw}\r\n          />\r\n        ) : (\r\n          <TableRow\r\n            key={item.nr}\r\n            nr={item.nr + 1}\r\n            period={item.period}\r\n            kw={item.kw}\r\n          />\r\n        ));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const rows = this.createRows();\r\n    return (\r\n      <div className=\"lap-table\">\r\n        <Table unstackable fixed size=\"small\" celled striped>\r\n          <Table.Header>\r\n            <Table.Row textAlign=\"center\" style={{ fontSize: 18 }}>\r\n              <Table.HeaderCell width={3}>№</Table.HeaderCell>\r\n              <Table.HeaderCell>Time</Table.HeaderCell>\r\n              <Table.HeaderCell>kW</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{rows}</Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TableRow = props => {\r\n  const mins = parseInt(props.period / 60000);\r\n  const secs = parseInt(props.period / 1000) % 60;\r\n  const millis = parseInt((props.period % 1000) / 100);\r\n  const periodString = mins + ':' + ('0' + secs).slice(-2) + ':' + millis;\r\n  return (\r\n    <Table.Row\r\n      textAlign=\"center\"\r\n      style={{ fontWeight: props.fontWeight, fontSize: 18 }}\r\n    >\r\n      <Table.Cell width={3}>{props.nr}</Table.Cell>\r\n      <Table.Cell>{periodString}</Table.Cell>\r\n      <Table.Cell>{props.kw}</Table.Cell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    resultRows: state.resultRows\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(LapTable);\r\n","export const changeParameter = (type, data) => {\r\n  switch (type) {\r\n    case \"coeffInput\":\r\n      return {\r\n        type: \"CHANGE_COEFF\",\r\n        payload: data\r\n      };\r\n    case \"impInput\":\r\n      return {\r\n        type: \"CHANGE_IMP\",\r\n        payload: data\r\n      };\r\n    case \"impKwhInput\":\r\n      return {\r\n        type: \"CHANGE_IMP_KWH\",\r\n        payload: data\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { Input, Label } from \"semantic-ui-react\";\r\nimport { changeParameter } from \"../actions/change-parameter\";\r\n\r\nclass Parameters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.changeVal = this.changeVal.bind(this);\r\n  }\r\n\r\n  changeVal(e) {\r\n    const type = e.target.id;\r\n    const param = e.target.value;\r\n    this.props.changeParameter(type, param);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"align-center\">\r\n        <div className=\"parameters\">\r\n          <Parameter\r\n            id=\"coeffInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.coeff}\r\n            text=\"Coefficient\"\r\n          />\r\n          <Parameter\r\n            id=\"impInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.imp}\r\n            text=\"Impulse\"\r\n          />\r\n          <Parameter\r\n            id=\"impKwhInput\"\r\n            onChange={this.changeVal}\r\n            value={this.props.impKwh}\r\n            text=\"Imp/kWh\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Parameter = props => {\r\n  return (\r\n    <div className=\"parameter\">\r\n      <div>\r\n        <Label pointing=\"below\">{props.text}</Label>\r\n      </div>\r\n      <div>\r\n        <Input\r\n          id={props.id}\r\n          type=\"number\"\r\n          fluid\r\n          onFocus={handleFocus}\r\n          size=\"small\"\r\n          onKeyPress={checkIfNumbers}\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          placeholder={\"Number\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst handleFocus = event => event.target.select();\r\n\r\nconst checkIfNumbers = e => {\r\n  let key;\r\n  if (e.type === \"paste\") {\r\n    key = e.clipboardData.getData(\"text/plain\");\r\n  } else {\r\n    key = e.keyCode || e.which;\r\n    key = String.fromCharCode(key);\r\n  }\r\n\r\n  var regex = /[0-9]|\\./;\r\n  if (!regex.test(key)) {\r\n    e.returnValue = false;\r\n    if (e.preventDefault) e.preventDefault();\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    coeff: state.coeff,\r\n    imp: state.imp,\r\n    impKwh: state.impKwh\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      changeParameter: changeParameter\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  matchDispatchToProps\r\n)(Parameters);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport Stopwatch from \"./Stopwatch\";\r\nimport LapTable from \"./LapTable\";\r\nimport Parameters from \"./Parameters\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // Connect to home server so I know number of connections\r\n    try {\r\n      fetch(\"http://77.79.16.147/logs\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Parameters />\r\n        <Stopwatch />\r\n        <LapTable />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport resultRows from \"./result-rows\";\r\nimport coeff from \"./coeff\";\r\nimport imp from \"./imp\";\r\nimport impKwh from \"./imp-kwh\";\r\n\r\nconst allReducers = combineReducers({\r\n  resultRows: resultRows,\r\n  coeff: coeff,\r\n  imp: imp,\r\n  impKwh: impKwh\r\n});\r\n\r\nexport default allReducers;\r\n","export default function(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_RESULT_ROW\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_COEFF\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_IMP\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(state = 1000, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_IMP_KWH\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./ui/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport allReducers from \"./reducers/\";\r\n\r\nconst store = createStore(allReducers);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}